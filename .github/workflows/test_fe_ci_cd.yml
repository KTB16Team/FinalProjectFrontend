# 워크플로우의 이름 설정
name: Frontend CI Workflow

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

        # Node.js 설치 - Vite와 React 등을 사용하기 위해 Node.js가 필요
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

  deploy:
    runs-on: ubuntu-latest

    steps:
      # 프로젝트를 체크아웃합니다.
      - uses: actions/checkout@v4

      # Node.js 설정 (필요한 경우)
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # AWS CLI 설치
      - name: Install AWS CLI
        run: sudo apt-get install awscli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
            aws-access-key-id: ${{ secrets.AWS_S3_IAM_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_S3_IAM_SECRET_ACCESS_KEY}}
            aws-region: ap-northeast-2  # 서울 리전

      # 파일 배포 (레포지토리 내의 파일을 S3 버킷에 업로드)
      # S3에 파일 업로드 및 성공 시 디스코드 알림 전송
      - name: Deploy to S3 and notify Discord
        run: |
          aws s3 sync ./frontend s3://${{ secrets.S3_BUCKET_NAME }} --delete
          if [ $? -eq 0 ]; then
            curl -H "Content-Type: application/json" \
            -d '{"content": "S3에 파일이 성공적으로 업로드되었습니다!"}' \
            https://discord.com/api/webhooks/1297841409314918400/q48PQoKwPJ6Sm9895nRFstQSqzpWZjbR_WLq_p3sr3jM1dVi9qV-kGTQV6lPwTwcQ_Wf
          else
            echo "S3 업로드에 실패했습니다."
            exit 1